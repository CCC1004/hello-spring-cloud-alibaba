spring:
  main:
    allow-bean-definition-overriding: true
  application:
    name: provider-admin
  cloud:
    nacos:
      discovery:
        server-addr: 192.168.2.121:8848
      config:
        server-addr: 192.168.2.121:8848
    sentinel:
      transport:
        dashboard: localhost:8888
  shardingsphere:
    props:
      sql:
        show: true
    datasource:
      names: ds0,ds1
      ds0:
        type: com.zaxxer.hikari.HikariDataSource
        driver-class-name: com.mysql.jdbc.Driver
        jdbc-url: jdbc:mysql://192.168.2.121:3310/myshop_0?useUnicode=true&characterEncoding=utf-8&serverTimezone=Hongkong&useSSL=false
        username: root
        password: '123456'
        hikari:
          minimum-idle: 5
          idle-timeout: 600000
          maximum-pool-size: 10
          auto-commit: true
          pool-name: MyHikariCP
          max-lifetime: 1800000
          connection-timeout: 30000
          connection-test-query: SELECT 1
      ds1:
        type: com.zaxxer.hikari.HikariDataSource
        driver-class-name: com.mysql.jdbc.Driver
        jdbc-url: jdbc:mysql://192.168.2.121:3311/myshop_1?useUnicode=true&characterEncoding=utf-8&serverTimezone=Hongkong&useSSL=false
        username: root
        password: '123456'
        hikari:
          minimum-idle: 5
          idle-timeout: 600000
          maximum-pool-size: 10
          auto-commit: true
          pool-name: MyHikariCP
          max-lifetime: 1800000
          connection-timeout: 30000
          connection-test-query: SELECT 1
    sharding:
      binding-tables: t_order,t_order_item
      broadcast-tables: t_config
      default-database-strategy:
        inline:
          algorithm-expression: ds$->{user_id % 2}
          sharding-column: user_id
      tables:
        t_order:
          actual-data-nodes: ds$->{0..1}.t_order_$->{0..1}
          table-strategy:
            inline:
              algorithm-expression: t_order_$->{order_id % 2}
              sharding-column: order_id
        t_order_item:
          actual-data-nodes: ds$->{0..1}.t_order_item_$->{0..1}
          table-strategy:
            inline:
              algorithm-expression: t_order_item_$->{order_id % 2}
              sharding-column: order_id

dubbo:
  scan:
    base-packages: com.funtl.spring.cloud.alibaba.provider.service
  protocol:
    name: dubbo
    port: -1
  provider:
    loadbalance: roundrobin
  registry:
    address: nacos://192.168.2.121:8848

server:
  port: 11000

mybatis:
  type-aliases-package: com.funtl.spring.cloud.alibaba.provider.domain
  mapper-locations: classpath:mapper/*.xml

management:
  endpoints:
    web:
      exposure:
        include: "*"
